<HTML>
  <HEAD>
    <TITLE>jmpRunSolidificationCalculation()</TITLE>
    <LINK REL="stylesheet" TYPE="text/css" HREF="simple.css">
  </HEAD>
  <BODY>
    <H1>jmpRunSolidificationCalculation()</H1>
    <P>Runs a solidification calculation.</P>
    <H2>Syntax</H2>
    <P CLASS="code-block">int jmpRunSolidificationCalculation (void);</P>
    <H2>Parameters</H2>
    <P>This function has no parameters.</P>
    <H2>Return values</H2>
    <TABLE COLS="2">
      <TR>
        <TD CLASS="fit"><CODE>JMP_STATUS_OK</CODE></TD>
        <TD CLASS="float">Request has been successfully completed.</TD>
      </TR>
      <TR>
        <TD CLASS="fit"><CODE>JMP_STATUS_ERROR</CODE></TD>
        <TD CLASS="float">An error has occurred.</TD>
      </TR>
    </TABLE>
    <H2>Output files</H2>
    <P><CODE><B>coldfire.in</B></CODE></P>
    <P CLASS="indent">This file is created to store the thermodynamics and compositions of phases obtained during solidification. It is very similar in structure to <CODE><B>scheil.out</B></CODE>, since the basis of the calculation is the Solver's Scheil-Gulliver model. The solidification behaviour described here takes into account the average composition of the solid formed and, when appropriate, solid-state transformations occurring during or after solidification. It is used as input for the Coldfire module, in order to calculate physical and thermophysical properties of the alloy during solidification.</P>
    <P><CODE><B>coldfire.out</B></CODE></P>
    <P CLASS="indent">The final stage of a solidification calculation involves running Coldfire to determine physical and thermophysical properties for the whole temperature range. The required input data is read from <CODE><B>coldfire.in</B></CODE>, and the output is written to this file in tab-separated format. The list of properties to consider may be adjusted using <A HREF="jmpSetPhysicalProperty.htm">jmpSetPhysicalProperty()</A> and <A HREF="jmpUnsetPhysicalProperty.htm">jmpUnsetPhysicalProperty()</A>.</P>
    <H2>Remarks</H2>
    <UL>
      <LI>Make sure that your application can access the required DLLs, configuration and database files, otherwise an error will occur. To successfully run a calculation, the contents of the subdirectory <CODE><B>Runtime/win32</B></CODE> (for 32-bit applications) or <CODE><B>Runtime/x64</B></CODE> (for 64-bit applications), found in the API installation directory, should be placed at the same level as your executable file.</LI>
      <LI>The output files will be saved in the working directory, which can be set using <A HREF="jmpSetWorkingDirectory.htm">jmpSetWorkingDirectory()</A>.</LI>
      <LI>When performing several calculations in a row, be sure to extract the data that you need or rename the output files at each step, as they will be overwritten.</LI>
    </UL>
    <H2>Requirements</H2>
    <TABLE COLS="2">
      <TR>
        <TD CLASS="fit">Headers</TD>
        <TD CLASS="float"><CODE>jmpcore.h</CODE><BR><CODE>jmpsolidification.h</CODE></TD>
      </TR>
      <TR>
        <TD CLASS="fit">Library</TD>
        <TD CLASS="float"><CODE>jmpsolidification.lib</CODE>/<CODE>jmpsolidification_x64.lib</CODE></TD>
      </TR>
      <TR>
        <TD CLASS="fit">DLLs</TD>
        <TD CLASS="float"><CODE>jmpcore.dll</CODE>/<CODE>jmpcore_x64.dll</CODE>
          <BR><CODE>jmpsolver.dll</CODE>/<CODE>jmpsolver_x64.dll</CODE>
          <BR><CODE>jmpcoldfire.dll</CODE>/<CODE>jmpcoldfire_x64.dll</CODE>
          <BR><CODE>jmpsolidification.dll</CODE>/<CODE>jmpsolidification_x64.dll</CODE>
        </TD>
      </TR>
    </TABLE>
  </BODY>
</HTML>